<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///defaults

/*included in script*/
txt = "fix me.";
timeInterval = 2;
xStart = 10;
//xEnd = room_width; //uneeded
lineBreak = ds_list_create();

var txt1 = "yayyy!! you found all the dogs!! i've always thought it'd be cool to make"
var txt9 = "a small remake of cat planet, so here we are with dog planet."
var txt2 = "i'm really sorry the dogs that you touch look more like cats"
var txt10 = "i am really not good at drawing yet"
var txt3 = "and trying to figure out how to draw the flappy ears turning and"
var txt11 = "bouncing and stuff was just way too hard."
var txt4 = "anyways, this was just meant to be a short, cute, and silly"
var txt12 = "game just for you, so hopefully you enjoyed it."
var txt5 = "you're an amazing person and words cannot describe"
var txt13 = "how lucky i feel to have you in my life."
var txt6 = "i hope you had an awesome birthday!!"
var txt7 = "-ryan vanek"
var txt8 = "//the end"

txt = scr_stringToArray(txt1);
txt9 = scr_stringToArray(txt9);
txt2 = scr_stringToArray(txt2);
txt10 = scr_stringToArray(txt10);
txt3 = scr_stringToArray(txt3);
txt11 = scr_stringToArray(txt11);
txt4 = scr_stringToArray(txt4);
txt12 = scr_stringToArray(txt12);
txt5 = scr_stringToArray(txt5);
txt13 = scr_stringToArray(txt13);
txt6 = scr_stringToArray(txt6);
txt7 = scr_stringToArray(txt7);
txt8 = scr_stringToArray(txt8);

ds_list_add(lineBreak, array_length_1d(txt));
txt = scr_append_arrays(txt, txt9)
ds_list_add(lineBreak, array_length_1d(txt));
txt = scr_append_arrays(txt, txt2)
ds_list_add(lineBreak, array_length_1d(txt));
txt = scr_append_arrays(txt, txt10)
ds_list_add(lineBreak, array_length_1d(txt));
txt = scr_append_arrays(txt, txt3)
ds_list_add(lineBreak, array_length_1d(txt));
txt = scr_append_arrays(txt, txt11)
ds_list_add(lineBreak, array_length_1d(txt));
txt = scr_append_arrays(txt, txt4)
ds_list_add(lineBreak, array_length_1d(txt));
txt = scr_append_arrays(txt, txt12)
ds_list_add(lineBreak, array_length_1d(txt));
txt = scr_append_arrays(txt, txt5)
ds_list_add(lineBreak, array_length_1d(txt));
txt = scr_append_arrays(txt, txt13)
ds_list_add(lineBreak, array_length_1d(txt));
txt = scr_append_arrays(txt, txt6)
ds_list_add(lineBreak, array_length_1d(txt));
txt = scr_append_arrays(txt, txt7)
ds_list_add(lineBreak, array_length_1d(txt));
txt = scr_append_arrays(txt, txt8)
ds_list_add(lineBreak, array_length_1d(txt));



draw_set_font(fnt_fonty);
lineSpace = string_height("Q");
/******************************/

color = c_white;

xPos = 5
yPos = 5;

lettersToDraw = 0; //how many letters to draw to the screen

alarm[0] = 1; //alarm for increasing the amount of letters to draw
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///increase amount of letters to be drawn
if (lettersToDraw &lt; array_length_1d(txt) - 1){
    lettersToDraw++;
    alarm[0] = 2;
    show_debug_message(lettersToDraw);
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw the letters

draw_set_color(c_white);

xPos = xStart;
yPos = lineSpace;

color = c_white; //default color


for (var i = 0; i &lt;= lettersToDraw; i++){


    for (var j = 0; j &lt;= ds_list_size(lineBreak); j++){ //check if the current position is a line break
        if (i == lineBreak[| j]){
            xPos = xStart;
            yPos += lineSpace;
        }   
    }//nested for
    
    //draw text
    draw_text(xPos, yPos, txt[i]);
    //increase x position
    xPos += string_width(txt[i]);
    
}//for 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
